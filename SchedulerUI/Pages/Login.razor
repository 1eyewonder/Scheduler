@page "/login"

@using SchedulerUI.Services.Interfaces
@using SchedulerAPI.Dtos

@inject IUserService userService
@inject NavigationManager NavigationManager

<h1>Log In</h1>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please log in using your account information</h5>
        <EditForm Model="userLogin" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" Class="form-control" @bind-Value="userLogin.Email" />
                <ValidationMessage For="@(() => userLogin.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" Class="form-control" @bind-Value="userLogin.Password" />
                <ValidationMessage For="@(() => userLogin.Password)" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {

    private UserLoginDto userLogin;

        protected override Task OnInitializedAsync()
    {
        userLogin = new UserLoginDto();
        userService.LogOut();
        return base.OnInitializedAsync();
    }

    private async Task HandleLogin()
    {
        var result = await userService.Login(userLogin);

        if (result.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/");
        }
    }
}