@page "/login"

@inject ILoginViewModel vm

<style>
    .card{
        justify-content:center;
        width: auto;
        margin: 5% 30%;
        border:none;
    }

    .mat-h2{
        text-align:center;
        margin-top: 10%;
    }

    .mat-h5{
        text-align: center;
        margin-bottom: 5%
    }

    .mdc-text-field {
        width: 100%;
    }

    .row {
        margin: 10px 0;
    }
</style>


<MatH2 Class="mat-h2">Log In</MatH2>

@if (vm.ErrorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        <p>@vm.ErrorMessage</p>
    </div>
}
<div class="card">
    <div class="card-body">

        <MatH5 Class="mat-h5">Please log in using your account information</MatH5>

        <EditForm Model="vm.UserLogin" OnValidSubmit="vm.Login">
            <DataAnnotationsValidator />
            <ValidationSummary />

            
            <div class="row">
                <ValidationMessage For="@(() => vm.UserLogin.Name)" />
            </div>
            <div class="row">
                <MatTextField Outlined="true" @bind-Value="vm.UserLogin.Name" Label="Username" ValidationDisabled="true"></MatTextField>
            </div>
            <div class="row">
                <ValidationMessage For="@(() => vm.UserLogin.Password)" />
            </div>
            <div class="row">
                <MatTextField Outlined="true" @bind-Value="vm.UserLogin.Password" Label="Password" ValidationDisabled="true" Type="password"></MatTextField>
            </div>
            
            <div style="text-align:center;">
                <MatButton Type="Primary" Disabled="vm.IsRunning" Outlined="true">Log In</MatButton>
            </div>

        </EditForm>
    </div>
</div>